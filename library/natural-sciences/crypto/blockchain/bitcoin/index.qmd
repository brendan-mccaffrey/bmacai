---
title: "Bitcoin"
description: "All pairse lord Satoshi"
page-layout: full
---

- [Bitcoin: A Peer to Peer Electronic Cash System](https://bitcoin.org/bitcoin.pdf)
- [Bitcoin Lightning Network](https://lightning.network/lightning-network-paper.pdf)
- [Segregated Witness Benefits](https://bitcoincore.org/en/2016/01/26/segwit-benefits/#efficiency-gains-when-not-verifying-signatures)
- [Vulnerability](https://invdos.net/paper/CVE-2018-17145.pdf) | [tweet](https://twitter.com/pcaversaccio/status/1627631035017052163?s=20)

Explorer | [btcscan](https://btcscan.org/)

## Transaction Versions

Bitcoin has 4 transaction versions. A transaction, in each version, consists of an input and output. A transaction corresponds to a txid, which is a hash of the transaction.

1. Legacy

Input: 
- UTxO (Unspent Tx) consists of a txid and output #.
- Script signature, proves I have the private key of the address that owns the UTXO.

Output:
- Amount (satoshis)
- public spending script. 2 Main types
    - P2PKH (Pay to Public Key Hash) = 25 bytes: specific to a single public key. 
    - P2SH (Pay to Script Hash) = 23 bytes: Allows for multisigs.

2. Segwit (Segregated Witness)

Input:
- UTxO: same as legacy
- Signed script signature: same as legacy

Output:
- Amount (satoshis): same as legacy
- `<version> <witness program>`: When a legacy blockchain looks at this, it looks like anyone can spend this. A valid transaction, but it appears to not have a public key. But the soft fork enforces that the public key is spent through a "witness". So when you want to spend it, you prove you know what your witness is. When you spend a received tx, you append a witness. A miner will verify a witness before it is mined, but the txid doesnt include the witness. This increases available space in the blockchain. **This enables a practical lightning network** There are tricks where you can have more than one signature valid for a spending script, and have 2 diff txids. This was one of the attacks against Mt Gox to take money out.
    - P2WSH = 32 bytes:
    - P2WPKH = 22 bytes: 

There are 2 Segwit versions. About 50% of transactions are version 0 Segwit, the other are the old versions. Segwit was introduced in a soft fork.

Version 1 is Taproot.

3. Taproot

The main feature is a new signature algorithm, not on the elliptic curve. It is Schnorr. It is a signature scheme that is more efficient, and has some privacy benefits. It is a soft fork.
    - P2TR (Pay to Taproot) (Bech32m) = 32 bytes:

"tweak: with MAST. This allows you to hash scripts to get a root hash, and aggregate this with a master pubkey to get a new pubkey. This allows you to to prove the tx is valid without revealing the master pubkey.

## Ordinals

How to Split Ordinals Mixed in a Single UTXO
- [article](https://www.howusedapps.com/how-to-split-ordinals-nfts-inscriptions/)

Splitting Bitcoin from Inscriptions on Ordinals Wallet
- [article](https://medium.com/@hello_90591/splitting-bitcoins-from-inscriptions-balance-on-ordinals-wallet-7703053013ed)

## Tech Stuff

```bash
# create ordinal wallet
ord wallet create

# receive sats
ord wallet receive

# create inscription
ord wallet inscribe --fee-rate 22 <FILE>
```

### Issues

Transport error upon inscription attempt [here](https://github.com/casey/ord/issues/1745)

Inscriptions taking too long [here](https://github.com/casey/ord/issues/1653)

Indexing not working [here](https://github.com/casey/ord/issues/1377)

How much does an inscription cost?
- [calculator](https://instacalc.com/56229)

## Guides

- [How to create](https://twitter.com/dotta/status/1622994709831622657)
- [How to buy](https://twitter.com/dotta/status/1622639010932994049?s=20&t=We0serUFNsBosQM1esxzbw)
- [Minting Ordinals](https://www.youtube.com/watch?v=j5V33kV3iqo)

## BTC Naming Service

Casey Rodarmor's Thoughts: 26:00 min mark
- [here](https://www.youtube.com/watch?v=MC_haVa6N3I)

1. Look up top level domain (com)
2. Find the output its in, and get address of the output
3. Get authenticated encrypted channel with the person that owns that
4. Ask "who has 'myname.com'?" and they send you signed message of the pubkey, and then you get IP address.
But no good names exist yet.


### Things I've Learned on the Ordinals Journey

Bitcoin has several address formats.

1. [Legacy Addresses](https://bitcoin.design/guide/glossary/address/#legacy-address---p2pkh)
2. [Script Addresses](https://bitcoin.design/guide/glossary/address/#script-address---p2sh)
3. [Segwit Addresses](https://bitcoin.design/guide/glossary/address/#segwit-address---p2wpkh)
4. [Taproot Addresses](https://bitcoin.design/guide/glossary/address/#taproot-address---p2tr)

Ordinals uses Taproot Addresses, which result from a recent upgrade aimed to introduce more reobust security, privacy, and scalability.

## Other Stuff

**What is it?**

- answered [here](https://ordinals.com)

**Resources**

- [Handbook](https://docs.ordinals.com/#)
- [Github](https://github.com/casey/ord/)
- [BIP](https://github.com/casey/ord/blob/master/bip.mediawiki)
- [Mainnet Explorer](https://ordinals.com/)
- [Testnet (Signet) Explorer](https://signet.ordinals.com/)
- [Guide](https://github.com/casey/ord/blob/master/docs/src/guides/inscriptions.md)
- [No Code Mint Platform](https://ordinalsbot.com/)

**Cool Info**

On August 21st, 2012, Charlie Lee posted a [proposal](https://bitcointalk.org/index.php?topic=102355.0) to add proof-of-stake to Bitcoin to the Bitcoin Talk forum. This wasn't an asset scheme, but did use the ordinal algorithm, and was implemented but never deployed.

On October 8th, 2012, jl2012 posted a [scheme](https://bitcointalk.org/index.php?topic=117224.0) to the the same forum which uses decimal notation and has all the important properties of ordinals. The scheme was discussed but never implemented.

**Gud Video**

- [youtube](https://www.youtube.com/watch?v=j5V33kV3iqo)

- [interview](https://www.youtube.com/watch?v=CRIZh-8iAdM)

Multimint
- [video](https://www.youtube.com/watch?v=1PZSlmttYAo&t=303s)

## Mint an NFT

```bash
# inscribe
ord wallet inscribe --fee-rate 20 ABSOLUTE_FILE_PATH
```

## TEST

I inscribed an image of Logan Tobias onto the Bitcoin blockchain.

```bash
$ ord wallet inscribe --fee-rate 20 /home/ubuntu/server-share/logan_resized.jpeg 
{
  "commit": "93f5630a6f6eb49235fb25878df06563f509ff5d5d89da6a4092af5d68eb4afd",
  "inscription": "2a7ff69382e71a01ac12884d974b3c1606d07624e3592f5c32068d1bfd8588a8i0",
  "reveal": "2a7ff69382e71a01ac12884d974b3c1606d07624e3592f5c32068d1bfd8588a8",
  "fees": 282600
}
```

Sat: 465805240538644

### Ordinal Project

This is a short guide on how to mint multiple ordinals quickly.

1) Create a Sparrow wallet to generate multiple UTXOs.

2) Calculate cost per ordinal.

- [calculator](https://instacalc.com/56229)
- [mempool](https://mempool.space/)
Add 600 (dust limit) + 10,000 (ordinal fee) to sats amount

We have: 132,000 sats per ordinal + 600 + 10,000 = 142,600 sats per ordinal