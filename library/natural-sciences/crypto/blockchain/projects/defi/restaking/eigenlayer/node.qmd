---
title: Eigen Node
description: Running an Eigenlayer operator node
---

## Operators

- [bmac](https://goerli.eigenlayer.xyz/operator/0xbc0a9e6ddb719aabc1Da9783BC91C37401B3DAea)
- [Quant Drip](https://goerli.eigenlayer.xyz/operator/0xc7fa09a1aefb2447856fc9b109c7f037d740dbfe)
- [Happy Feet](https://goerli.eigenlayer.xyz/operator/0x94f2dbaf324eb35a74f869b8159122b6bb9a38ef)
- [Nitro Operations](https://goerli.eigenlayer.xyz/operator/0x7eea2e499d9bd0f0a2cf2fa19b80a5b08a846ed1)
- [LayerZero Intern](https://goerli.eigenlayer.xyz/operator/0x787875c39e57699c19d6a2453c9e9aab905ab76d)
- [Operation6](https://goerli.eigenlayer.xyz/operator/0x41573426f067f8221a9a91bf80d863520f7f4a05)
- [Move Apprentice](https://goerli.eigenlayer.xyz/operator/0xd5e0c0c0ebfd2e181767fb1fdda8dc7fe5773970)

## Running a Node

### Resources

- [Release 0.3.0](https://github.com/Layr-Labs/eigenda-operator-setup/releases/tag/v0.3.0)
- [Upgrade Node Docs](https://docs.eigenlayer.xyz/eigenda/operator-guides/eigenda-avs-installation-registration-and-upgrade#upgrade-your-node)
- [CLI v6 Release](https://github.com/Layr-Labs/eigenlayer-cli/releases/tag/v0.6.0)
- [Goerli Dashboard](https://goerli.eigenlayer.xyz/operator)

### Setup

**Create EC2 Instance**

1. Create AWS Instance
2. Copy IPv4 DNS
3. Add ssh alias command to zshrc
    - `nano ~/.zshrc`
    - `source ~/.zshrc`

**Install Docker**

```bash
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

# Install latest docker version
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# verify successful installation with 
sudo docker run hello-world
```

**Install Eigen**

```bash
# install Eigen CLI using binary
curl -sSfL https://raw.githubusercontent.com/layr-labs/eigenlayer-cli/master/scripts/install.sh | sh -s

# add to PATH
export PATH=$PATH:~/bin
```

### Setup

**Create Keys** 

```bash
# create Keys 
eigenlayer operator keys create --key-type ecdsa opr
```

```bash
eigenlayer operator keys create --key-type bls opr
```

Save these private keys somewhere safe, upload ecdsa pk into metamask and fund it with ETH

**Create config**

```bash
eigenlayer operator config create
```

1. Populate? yes
2. Operator Address: paste ecdsa pub
3. RPC: https://ethereum-goerli.publicnode.com
4. ECDSA key path: /home/ubuntu/.eigenlayer/operator_keys/opr.ecdsa.key.json
5. BLS key path: /home/ubuntu/.eigenlayer/operator_keys/opr.bls.key.json
6. Network: Goerli

**Edit Config**

1. Create github repo
2. upload pfp.png to repo

`nano metadata.json`

```json
{
  "name": "TODO name",
  "website": "website",
  "description": "pow pow",
  "logo": "https://raw.githubusercontent.com/USER/REPO/main/pfp.png",
  "twitter": "https://twitter.com/user"
}
```

3. Paste this in a github repo.

`nano operator.yaml`

Get raw url to the metadata.json, paste as "metadata_url"

## Register Operator

1. [Get Goerli ETH](https://testnetbridge.com/)
2. Run command
```bash
eigenlayer operator register operator.yaml
```

3. [Stake goerli ETH for ankrETH](https://testnet.ankr.com/staking/stake/ethereum/)
4. Add ankrETH to metamask: 0x2bBC91e1990F0dc5e5BAD04AaE000Ca97f56990f
5. [Restake your ankrETH](https://goerli.eigenlayer.xyz/token/ankrETH)

## Opt In to EigenDA AVS

**Setup**

Clone repo

```bash
git clone https://github.com/Layr-Labs/eigenda-operator-setup.git
cd eigenda-operator-setup
cp .env.example .env
```

Edit .env

`nano .env`

- BLS pkey
- Node pkey
- Node Hostname: Public IPv4 DNS
- RPC url: https://ethereum-goerli.publicnode.com
- ECDSA password, BLS password

Make required local folders

```bash
mkdir -p $HOME/.eigenlayer/eigenda/logs
mkdir -p $HOME/.eigenlayer/eigenda/db
```

**Opt-in to EigenDA AVS**

1. Opt-In: `sudo ./run.sh opt-in`

```bash
# Expected output
using socket: ec2-13-115-69-92.ap-northeast-1.compute.amazonaws.com:32005;32004
2024/01/21 22:33:54 maxprocs: Leaving GOMAXPROCS=2: CPU quota undefined
2024/01/21 22:33:54 Info: plugin configs and flags parsed
2024/01/21 22:33:55 Info: Bls key read and decrypted from /app/operator_keys/bls_key.json
2024/01/21 22:33:57 Info: ECDSA key read and decrypted from /app/operator_keys/ecdsa_key.json
2024/01/21 22:33:57 Info: ethclient created for url: https://g.w.lavanet.xyz:443/gateway/gth1/rpc-http/742b76c86118c1272a71e73c988878db
2024/01/21 22:33:59 Info: Operator with Operator Address: bc0a9e6ddb719aabc1da9783bc91c37401b3daea is opting in to EigenDA
DEBUG[01-21|22:33:59.540|github.com/Layr-Labs/eigenda/node/operator.go:35] Registered quorum ids                    registeredQuorumIds=[] caller=operator.go:35
INFO [01-21|22:33:59.803|github.com/Layr-Labs/eigenda/node/operator.go:46] Quorums to register for                  quorums=[0] caller=operator.go:46
INFO [01-21|22:34:00.331|github.com/Layr-Labs/eigenda/node/operator.go:73] Should call churner                      shouldCallChurner=true caller=operator.go:73
INFO [01-21|22:34:00.331|github.com/Layr-Labs/eigenda/node/operator.go:115] churner url                              url=churner-goerli.eigenda.xyz:443 caller=operator.go:115
2024/01/21 22:35:02 Info: successfully opt-in the EigenDA, for operator ID: f3cbbd02a20044c58ed57c8dfee9fd5d70858c3d3f449051651f0d5649031ac1, operator address: bc0a9e6ddb719aabc1da9783bc91c37401b3daea, socket: ec2-13-115-69-92.ap-northeast-1.compute.amazonaws.com:32005;32004, and quorums: [0]
```

2. Run EigenDA: `sudo docker compose up -d`

```bash
# Expected Output
[+] Running 11/11
 ✔ reverse-proxy 7 layers [⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled                                                                                                                                                                                           7.1s 
   ✔ 2f44b7a888fa Pull complete                                                                                                                                                                                                                      0.9s 
   ✔ 8b7dd3ed1dc3 Pull complete                                                                                                                                                                                                                      1.2s 
   ✔ 35497dd96569 Pull complete                                                                                                                                                                                                                      0.5s 
   ✔ 36664b6ce66b Pull complete                                                                                                                                                                                                                      1.1s 
   ✔ 2d455521f76c Pull complete                                                                                                                                                                                                                      1.8s 
   ✔ dc9c4fdb83d6 Pull complete                                                                                                                                                                                                                      1.7s 
   ✔ 8056d2bcf3b6 Pull complete                                                                                                                                                                                                                      1.7s 
 ✔ da-node 2 layers [⣿⣿]      0B/0B      Pulled                                                                                                                                                                                                      2.4s 
   ✔ c926b61bad3b Already exists                                                                                                                                                                                                                     0.0s 
   ✔ c6a5ca8cb47b Pull complete                                                                                                                                                                                                                      1.0s 
[+] Running 2/3
 ⠧ Network eigenda-network                           Created                                                                                                                                                                                         1.7s 
 ✔ Container eigenda-native-node                     Started                                                                                                                                                                                         1.3s 
 ✔ Container eigenda-operator-setup-reverse-proxy-1  Started                                                                                                                                                                                         0.7s 
```

3. Can validate with 

```bash
sudo docker ps

sudo docker logs -f CONTAINER_ID

# EXPECTED OUTPUT 
2024/01/29 18:20:15 maxprocs: Leaving GOMAXPROCS=1: CPU quota undefined
2024/01/29 18:20:15 Initializing Node
2024/01/29 18:20:22     Reading G1 points (33554432 bytes) takes 310.60509ms
2024/01/29 18:20:32     Parsing takes 9.734650908s
2024/01/29 18:20:32     Reading G2 points (67108864 bytes) takes 589.650419ms
2024/01/29 18:23:58     Parsing takes 3m25.428292413s
numthread 1
INFO [01-29|18:23:59.421|github.com/Layr-Labs/eigenda/common/logging/logging.go:65] Starting metrics server at port :9092    caller=logging.go:65
INFO [01-29|18:23:59.431|github.com/Layr-Labs/eigenda/node/node.go:170]             Enabled metrics                          socket=:9092 caller=node.go:170
INFO [01-29|18:23:59.431|github.com/Layr-Labs/eigenda/common/logging/logging.go:65] Starting node api server at address :9091 caller=logging.go:65
INFO [01-29|18:23:59.431|github.com/Layr-Labs/eigenda/node/node.go:174]             Enabled node api                         port=9091 caller=node.go:174
INFO [01-29|18:23:59.431|github.com/Layr-Labs/eigenda/common/logging/logging.go:65] The node has successfully started. Note: if it's not opted in on https://goerli.eigenlayer.xyz/avs/eigenda, then please follow the EigenDA operator guide section in docs.eigenlayer.xyz to register caller=logging.go:65
INFO [01-29|18:23:59.437|github.com/Layr-Labs/eigenda/node/grpc/server.go:119]      port                                     32004=address [::]:32004="GRPC Listening" caller=server.go:119
INFO [01-29|18:23:59.439|github.com/Layr-Labs/eigensdk-go/nodeapi/nodeapi.go:240]   node api server running                  addr=:9091 caller=nodeapi.go:240
INFO [01-29|18:23:59.439|github.com/Layr-Labs/eigenda/node/node.go:220]             Start expireLoop goroutine in background to periodically remove expired batches on the node caller=node.go:220
INFO [01-29|18:23:59.439|github.com/Layr-Labs/eigenda/node/node.go:374]             Start checkRegisteredNodeIpOnChain goroutine in background to subscribe the operator socket change events onchain caller=node.go:374
INFO [01-29|18:23:59.441|github.com/Layr-Labs/eigenda/node/node.go:397]             Start checkCurrentNodeIp goroutine in background to detect the current public IP of the operator node caller=node.go:397
INFO [01-29|18:23:59.441|github.com/Layr-Labs/eigenda/node/grpc/server.go:95]       port                                     32005=address [::]:32005="GRPC Listening" caller=server.go:95
TRACE[01-29|18:24:14.858|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:17.838|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:20.842|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:23.834|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:26.840|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:29.840|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:32.837|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:35.838|github.com/Layr-Labs/eigenda/common/geth/client.go:242]    Transaction not yet mined                txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb caller=client.go:242
TRACE[01-29|18:24:38.887|github.com/Layr-Labs/eigenda/common/geth/client.go:213]    transaction confirmed                    txHash=0xe38227ea3efed5e6f802ffe21210a47708454bacb3a9103753368d54adfecccb tag=UpdateOperatorSocket gasUsed=36582 caller=client.go:213
INFO [01-29|18:24:38.887|github.com/Layr-Labs/eigenda/node/node.go:368]             Socket update                            "old socket"=ec2-54-210-157-209.compute-1.amazonaws.com:32005;32004 "new socket"=54.210.157.209:32005;32004 caller=node.go:368
```

#### **Thats's it! You are done!**

Check the [dashboard here](https://goerli.eigenlayer.xyz/avs/eigenda)

## OLD Notes

this from the old verion i dont want to delete


Stake ETH on Goerli

- [Stader Staked ETH](https://goerli.etherscan.io/address/0xd0e400ec6ed9c803a9d9d3a602494393e806f823#writeProxyContract#F2)
- [Token Contract ETHx](0x3338eCd3ab3d3503c55c931d759fA6d78d287236)

- [ANKR Staked ETH](https://testnet.ankr.com/staking/stake/ethereum/)
- [Token Contract](https://goerli.etherscan.io/token/0x2bbc91e1990f0dc5e5bad04aae000ca97f56990f)

Deposit on EigenLayer [here](https://goerli.eigenlayer.xyz/token/ankrETH)
