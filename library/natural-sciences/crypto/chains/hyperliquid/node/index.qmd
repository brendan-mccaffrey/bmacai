---
title: Hyperliquid Node
---

## Overview

[Repository Link](https://github.com/hyperliquid-dex/node)

- need to open ports `8000`, `9000`, `3001` (validating node also requires 4,5,6,7000)

## Resources

- [Testnet geographical distribution](https://validao.xyz/#maps-hyperliquid-testnet)
    - "The way it works right now is passive network monitoring over 2 read-only nodes -- so we index all IPs communicating with our read-only nodes on the p2p ports, filtering for more than than X packets observed to filter out random scanners"
- [Hyperliquid Testnet Notion Guide](https://firstset.notion.site/Hyperliquid-Testnet-ce49a7996be24eb5803661447349a427?pvs=4)

## Walkthrough

Command: `~/hl-visor run-non-validator`, Flags

- `--write-order-statuses` will write every L1 order status to `~/hl/data/node_order_statuses/hourly/{date}/{hour}`
- `--evm` will enable EVM rpc, you can send evm post requests to localhost port 3001

### Join Network

`~/hl-node --chain Testnet send-signed-action '{"type": "CValidatorAction", "register": {"profile": {"node_ip": {"Ip": "3.112.124.130"}, "name": "HyperShoku", "description": "Validating a pretty good L1" }}}' <node-wallet-key>`

## Walkthrough

Purchase EC2 in tokyo running ubuntu 24.04, need 4 CPU cores, 16 gb RAM, and 50 gb disk.

### Setup / Install Docker

```bash
# update package list and upgrade outdated packages
sudo apt-get update
sudo apt-get upgrade -y

# install package that allows apt to use repositories over HTTPS
sudo apt install apt-transport-https ca-certificates curl software-properties-common -y


# add docker's GPG key
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# setup docker repository 
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# update package database
sudo apt update

# install docker engine
sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

# verify installation
sudo docker run hello-world
```

### Clone Hyperliquid

```bash
# clone repository
git clone https://github.com/hyperliquid-dex/node.git

# configure chain to testnet 
echo '{"chain": "Testnet"}' > ~/visor.json

### OLD COMMAND
# # download config file, will not be necessary in the future
# curl https://binaries.hyperliquid.xyz/Testnet/non_validator_config.json > ~/non_validator_config.json

# download the visor binary, which will spawn and manage the child node process
curl https://binaries.hyperliquid.xyz/Testnet/hl-visor > ~/hl-visor && chmod a+x ~/hl-visor
```

## Setup env

```bash
nano ~/.env
```
enter env variables

`.env.example`
```bash
export USER_PK=
export USER_ADDRESS=
export MY_IP=
export VAL_NAME=
export VAL_DESCRIPTION=
```

```bash
chmod 600 ~/.env

nano ~/.bashrc
# add source ~/.env here 

source ~/.bashrc
```

## Run the node

```bash
screen -S hypernode

~/hl-visor run-non-validator --evm

# exit screen
```

## Setup val config

```bash
echo "{\"key\": \"$USER_PK\"}" > ~/hl/hyperliquid_data/node_config.json
```

## Make cmds

```bash
mkdir cmd 

nano cmd/listvals.sh 
```

`curl -X POST --header "Content-Type: application/json" --data '{ "type": "validatorSummaries"}' https://api.hyperliquid-testnet.xyz/info  | jq -r '(["Name", "Validator", "Description", "Recent Blocks", "Stake", "Jailed"] | (., map(length*"-"))), (.[] | [.name, .validator, .description, .nRecentBlocks, .stake, .isJailed]) | @tsv' | column -t -s $'\t' | awk 'BEGIN{print "+"FS"-"FS"+"} NR==1{gsub(/[^|]/,"-",$0); print "+"FS$0FS"+"}; NR>1{print "|"FS$0FS"|"}; END{print "+"FS"-"FS"+"}'`

```bash
chmod a+x cmd/listvals.sh 

nano cmd/valaddress.sh 
```

`~/hl-node --chain Testnet --key $USER_PK print-address`

```bash
chmod a+x cmd/valaddress.sh 

nano cmd/joinnetwork.sh
```

`~/hl-node --chain Testnet --key "$USER_PK" send-signed-action '{"type": "CValidatorAction", "register": {"profile": {"node_ip": {"Ip": "'"$MY_IP"'"}, "name": "'"$VAL_NAME"'", "description": "'"$VAL_DESCRIPTION"'" }}}'`

```bash
chmod a+x cmd/joinnetwork.sh 
```


### Run

```bash
# create screen for process
screen -S hypernode

# run binary
./hl-visor
```