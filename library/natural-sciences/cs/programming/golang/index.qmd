---
title: Golang
---

## Resources

- [The Go Programming Language Spec](https://go.dev/ref/spec)
- [Practical Go](https://dave.cheney.net/practical-go)
- [Why Go Gets Exceptions Right](https://dave.cheney.net/2012/01/18/why-go-gets-exceptions-right)

### Advanced

- [Inlining](https://dave.cheney.net/2020/05/02/mid-stack-inlining-in-go)


## Topics

### The Zero Value

When memory is allocated to store a value, either through a declaration or a call of make or new, and no explicit initialization is provided, the memory is given a default initialization. Each element of such a value is set to the zero value for its type: **false for booleans, 0 for integers, 0.0 for floats, "" for strings, and nil for pointers, functions, interfaces, slices, channels, and maps**. This initialization is done recursively, so for instance each element of an array of structs will have its fields zeroed if no value is specified.